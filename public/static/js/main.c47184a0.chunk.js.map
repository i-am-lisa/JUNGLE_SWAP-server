{"version":3,"sources":["components/SignIn.js","components/SignUp.js","config.js","components/Chatbot.js","images/JungleSwap_Home.png","images/JungleSwap_Icon.png","components/Home.js","components/NavBar.js","components/Footer.js","components/AddForm.js","components/EditForm.js","components/PlantDetail.js","components/CheckoutForm.js","components/CheckoutPage.js","components/LogOut.js","components/RequestForm.js","components/RequestsPage.js","App.js","index.js"],"names":["SignIn","props","className","onSubmit","onSignIn","htmlFor","type","id","name","SignUp","onSignUp","error","style","color","errorMessage","to","process","Chatbot","d","m","s","document","createElement","async","src","getElementsByTagName","appendChild","window","kommunicate","_globals","Component","Home","this","plants","query","scroll","onClick","y","smooth","class","image","alt","icon","placeholder","value","onChange","onSearch","map","plant","price","_id","NavBar","Navbar","variant","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","Nav","user","Footer","AddForm","onAdd","min","EditForm","state","handleNameChange","event","text","target","clonePlant","JSON","parse","stringify","setState","handleDescChange","description","handleSizeChange","size","handlePriceChange","handleLocationChange","location","handleImageChange","files","uploadForm","FormData","append","axios","post","config","then","response","data","console","log","catch","err","plantId","match","params","get","onEdit","PlantDetail","withCredentials","onDelete","creator","pathname","CheckoutForm","useState","succeeded","setSucceeded","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","useEffect","fetch","method","headers","body","items","res","json","handleChange","a","empty","message","handleSubmit","ev","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","options","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","onCheckout","role","CheckoutPage","promise","loadStripe","Logout","onLogOut","RequestForm","onRequest","cols","rows","RequestsPage","componentDidMount","onMyRequests","requests","request","seller","App","loggedInUser","fetchingUser","fetchAllPlants","fetchQueryPlants","ready","plantImage","newPlant","history","push","handleEditPlant","editedPlant","patch","newPlants","singlePlant","handleDelete","delete","filteredPlants","filter","handleSignUp","username","email","password","handleSignIn","handleLogOut","handleCheckout","handleRequestSubmit","buyer","handleMyRequests","exact","path","render","routeProps","LogOut","withRouter","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c47184a0.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction SignIn(props) {\n  return (\n    <div className=\"container row mt-5 custom fullscreen\">\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\n      <form onSubmit={ props.onSignIn }>\n        <div className=\"form-group\">\n          <label htmlFor=\"InputEmail\"> Email address </label>\n          <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\" />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"InputPassword\"> Password </label>\n          <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\" />\n        </div>\n        <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\"> Sign in </button>\n      </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SignIn;","import React from \"react\";\nimport {Link} from  'react-router-dom'\n\nfunction SignUp(props) {\n  return (\n    <div className=\"container row mt-5\">\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\n        <form onSubmit={ props.onSignUp }>\n          <div className=\"form-group\">\n            <label htmlFor=\"InputUsername\"> Username </label>\n            <input type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\"/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"InputEmail\"> Email address </label>\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\"/>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"InputPassword\"> Password </label>\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\"/>\n          </div>\n          {\n            props.error ? (\n              <p style={{ color: \"red\" }}>{ props.error.errorMessage }</p>\n            ) : (\n              null\n            )\n          }\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\"> Sign up </button>\n          <p>Already have an account?</p>\n          <Link to={'/signin'}>Sign in</Link>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;","export default {\n\tAPI_URL: process.env.REACT_APP_SERVER_URL\n}","import React, { Component } from 'react'\n\nexport default class Chatbot extends Component {\n\n\n  componentDidMount(){\n    (function(d, m){\n        var kommunicateSettings = \n            {\"appId\":\"359e94bbb245c09ca5b9f4f2b549ce9da\",\"popupWidget\":true,\"automaticChatOpenOnNavigation\":true};\n        var s = document.createElement(\"script\"); s.type = \"text/javascript\"; s.async = true;\n        s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\n        var h = document.getElementsByTagName(\"head\")[0]; h.appendChild(s);\n        window.kommunicate = m; m._globals = kommunicateSettings;\n    })(document, window.kommunicate || {});\n  }\n\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n","export default __webpack_public_path__ + \"static/media/JungleSwap_Home.c4ed9b4c.png\";","export default __webpack_public_path__ + \"static/media/JungleSwap_Icon.a6c7c44a.png\";","import React, { Component } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport Chatbot from \"./Chatbot\"\nimport { ScrollTo } from \"react-scroll-to\";\nimport image from '../images/JungleSwap_Home.png';\nimport icon from '../images/JungleSwap_Icon.png';\n\nclass Home extends Component {\n  render() {\n\n    const { plants, query } = this.props;\n    return (\n      <div>\n        {\n          <header className=\"text-center pt-5 pb-5 headerImg\">\n            <div className=\"row my-5\">\n              <div className=\"col-6 offset-3 my-5 borderAround\">\n                <h2 className=\"title mb-2\"> JungleSwap </h2>\n                <h5 className=\"mt-3 mb-5\">Share your green heart</h5>\n                <div className=\"mb-5\">\n                  <ScrollTo>\n                    {\n                      ({ scroll }) => (\n                        <Link className=\"biggerFontSize\" onClick={() => scroll({y: 820, smooth: true})}> Try it! </Link>\n                      )\n                    }\n                  </ScrollTo>\n                </div>\n              </div>\n            </div>\n          </header>\n        }\n        <Chatbot/>\n        \n        <div>\n          <div class=\"intro\">\n            <div class=\"intro-centered container\">\n              <div class=\"row\">\n                <div class=\"col-sm-6 col-md-5 col-lg-6\">\n                  <img class=\"image\" src={image} alt=\"\"></img>\n                </div>\n\n                <div class=\"intro col-sm-6 col-md-5 col-lg-6 px-5\">\n                    <h4> Welcome to JungleSwap!</h4>\n                    <h5>Add green to your Home</h5> \n                    <p>It's easy-peasy.<br></br><br></br>\n                    Share your plant offshoots.<br></br>\n                    Make money!<br></br><br></br>\n                    Or swap them for another plant.<br></br><br></br>\n                    Don't have any baby plants? <br></br>You can simply shop and give a plant a new home.</p>\n                    <img class=\"icon\" src={icon} alt=\"\"></img>  \n                </div>\n\n              </div>\n            </div>\n          </div>\n       \n          <div className=\"container mt-5\">\n            <div className=\"mt-4 mb-3 pt-5\">\n            <h2>Plants</h2>\n            <hr></hr>\n              <h4>Search a plant</h4>            \n            </div>\n            <div className=\"mb-4\">\n              <input className=\"smallWidth form-control\" type=\"text\" placeholder=\"Search...\" value={ query } onChange={ this.props.onSearch }/>\n            </div>\n            <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n            {\n              plants.map(\n                (plant) => {\n                  return (\n                    \n                    <div className=\"col mb-5\" key={ plant._id }>\n                      <div className=\"h-100 card text-center\">\n                        <img className=\"card-img-top\" src={ plant.image } alt={ plant.name }/>\n                        <div className=\"card-body mb-5\">\n                          <h5> { plant.name } </h5>\n                          <p>{plant.price} €</p>\n                          <Link className=\"btn btn-outline-dark\" to={ `/plants/${ plant._id }` }> Details </Link>\n                        </div>                      \n                      </div>\n                    </div>\n                   \n                  );\n                } \n              )\n            }\n            </div>\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React from  'react'\nimport {Navbar, Nav} from  'react-bootstrap'\nimport {Link} from  'react-router-dom'\nimport { ScrollTo } from \"react-scroll-to\";\n\nfunction NavBar (props) {\n  const myRef = React.createRef();\n\n  return (\n    <>\n      <Navbar  className=\"pl-5\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\n      <Navbar.Brand href=\"/\"> JungleSwap </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav  className=\"mr-auto\">\n            <Link className=\"p-2\" to=\"/add-form\"> Add Plant </Link>\n            {\n              <ScrollTo >\n                  {({ scroll }) => (\n                    <Link className=\"p-2\" onClick={() => scroll({y: 1700, smooth: true})}>All Plants</Link>\n                  )}\n              </ScrollTo>\n            }\n            <Link className=\"p-2\" to=\"/myrequests\"> Messages </Link>\n            {\n              props.user ? (\n                <Link className=\"p-2\" to=\"/logout\"> Log out </Link>\n              ) : (\n                <>\n                  <Link className=\"p-2\" to=\"/signin\"> Sign in </Link>\n                  <Link className=\"p-2\" to=\"/signup\"> Sign up </Link>\n                </>\n              )\n            }\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>  \n    </>\n  );\n}\n\nexport default NavBar;","import React, { Component } from 'react'\n\nexport default class Footer extends Component {\n    render() {\n        return (\n            <div class=\"footer-row\">\n                <footer>Copyright © 2021 <a href=\"https://www.linkedin.com/in/christian-gerbig/\">Christian Gerbig</a> & <a href=\"https://www.linkedin.com/in/lisa-montebaur/\">Lisa Montebaur</a></footer>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass AddForm extends Component {\n  render() {\n    const {user} = this.props\n\n    if(!user){\n      return <Redirect to={'/signup'}/>\n    }\n    return (\n    \n      <div className=\"container row mt-5 fullscreen\">\n        <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-6\">\n          <h2 className=\"mt-5 mb-5\">Upload a plant</h2>\n          <form onSubmit={ this.props.onAdd }>\n            <input className=\"mb-4\" name=\"name\" type=\"text\" placeholder=\"Enter name\"/>\n            <input className=\"mb-4\" name=\"description\" type=\"text\" placeholder=\"Enter description\"/>\n            <input className=\"mb-4 smallWidth\" name=\"size\" type=\"number\" min=\"1\" placeholder=\"Size\"/> cm <br/>\n            <select className=\"mb-4 p-1\" name=\"location\" type=\"text\">\n              <option> Select location </option>\n              <option value=\"sun\"> sun </option>\n              <option value=\"shade\"> shade </option>\n              <option value=\"sun and shade\"> sun and shade </option>\n            </select>\n            <br></br>\n            <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" placeholder=\"Price\"/> € <br/>\n\n            <input className=\"mb-4\" name=\"plantImage\" type=\"file\"/>\n            <div className=\"col-12\">\n              <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\" > Add plant </button>\n              <Link to={ `/` }> \n                <button className=\"btn btn-sm mx-5\"> Go back </button> \n              </Link>\n              </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default AddForm;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nclass EditForm extends Component {\n\n  state = {\n    plant: {}\n  }\n\n  componentDidMount() {\n    let plantId = this.props.match.params.plantId;\n    axios.get(`${ config.API_URL }/api/plants/${ plantId }`)\n      .then(\n        (response) => {\n          this.setState(\n            {\n              plant: response.data\n            }\n          );\n        }\n      )\n      .catch(\n        () => {\n          console.log(\"Detail fetch failed\");\n        }\n      );\n  }\n\n  handleNameChange = (event) => {\n    let text = event.target.value;\n    let clonePlant = JSON.parse(JSON.stringify(this.state.plant));\n    clonePlant.name = text\n    this.setState(\n      {\n        plant: clonePlant\n      }\n    );\n  }\n\n  handleDescChange = (event) => {\n    let text = event.target.value;\n    let clonePlant = JSON.parse(JSON.stringify(this.state.plant));\n    clonePlant.description = text;\n    this.setState(\n      {\n      plant: clonePlant\n      }\n    );\n  }\n\n  handleSizeChange = (event) => {\n    let text = event.target.value;\n    let clonePlant = JSON.parse(JSON.stringify(this.state.plant));\n    clonePlant.size = text;\n    this.setState(\n      {\n        plant: clonePlant\n      }\n    );\n  }\n\n  handlePriceChange = (event) => {\n    let text = event.target.value;\n    let clonePlant = JSON.parse(JSON.stringify(this.state.plant));\n    clonePlant.price = text;\n    this.setState(\n      {\n        plant: clonePlant\n      }\n    )\n  }\n\n  handleLocationChange = (event) => {\n    let text = event.target.value;\n    let clonePlant = JSON.parse(JSON.stringify(this.state.plant));\n    clonePlant.location = text;\n    this.setState(\n      {\n        plant: clonePlant\n      }\n    );\n  }\n\n\n  handleImageChange = (event) => {\n    let image = event.target.files[0];\n    let uploadForm = new FormData();\n    uploadForm.append(\"imageUrl\", image);\n    axios.post(`${ config.API_URL }/api/upload`, uploadForm)\n      .then(\n        (response) => {\n          let clonePlant = JSON.parse(JSON.stringify(this.state.plant));\n          clonePlant.image = response.data.image;\n          this.setState(\n            {\n              plant: clonePlant\n            }\n          );\n          console.log(clonePlant);\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Image upload failed\", err);\n        }\n      );\n  }\n\n  render() {\n    const { plant } = this.state;\n    const { onEdit } = this.props;\n    return (\n      <div className=\"container row mt-5 fullscreen\">\n        <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\n          <h2 className=\"mt-5 mb-4\"> Edit your plant </h2>\n          <div className=\"card cardSmallWidth mb-5\">\n            <img className=\"mb-2 smallPicSize\" src={ plant.image } alt={ plant.name }/>\n            <div className=\"card-body\">\n              <input className=\"mb-2\" onChange={ this.handleImageChange } type=\"file\"/>\n              <input className=\"mb-2\"  type=\"text\" onChange={ this.handleNameChange } value={ plant.name }/>\n              <input className=\"mb-2\"  type=\"text\" onChange={ this.handleDescChange } value={ plant.description }/>\n              <input className=\"mb-2 smallWidth\"  type=\"number\" onChange={this.handleSizeChange} value={ plant.size }/> cm <br/>\n              <select  className=\"mb-2\" onChange={ this.handleLocationChange } name=\"location\" type=\"text\" placeholder=\"Select\">\n                <option value=\"sun\"> sun </option>\n                <option value=\"shade\"> shade </option>\n                <option value=\"sun and shade\"> sun and shade </option>\n              </select> <br/>\n              <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" onChange={ this.handlePriceChange } value={ plant.price }/> € \n              <div className=\"row justify-content-around\">\n                <button className=\"btn btn-sm btn-outline-dark\" onClick={ () => { onEdit(plant) } }  > Save changes </button>\n                <Link to={ `/plants/${plant._id}` }> \n                  <button className=\"btn btn-sm mx-2 btn-outline-dark\"> Go back </button> \n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditForm;\n","import React, { Component, createRef } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport config from \"../config\";\nimport axios from \"axios\";\n\nclass PlantDetail extends Component {\n\n  state = {\n    plant: {}\n  }\n\n  componentDidMount() {\n    let plantId = this.props.match.params.plantId;\n    axios.get(\n      `${config.API_URL}/api/plants/${plantId}`,\n      { withCredentials: true }\n    )\n      .then(\n        (response) => {\n          this.setState({ plant: response.data });\n        }\n      )\n      .catch(\n        () => {\n          console.log(\"Detail fetch failed\");\n        }\n      );\n  }\n\n  render() {\n    const { plant } = this.state;\n    const { onDelete, user } = this.props;\n    if (!user) {\n      return <Redirect to={ \"/signup\" }/>\n    }\n    return (\n      <div className=\"container mt-5 row row-md-10 offset-1 offset-md-4 fullscreen\">\n        \n        <div className=\"mt-4 mb-3 pt-4 container\">\n        \n          <h2> Plant details </h2>\n        </div>\n        <div className=\"col\">\n          <div className=\"card cardMediumWidth\">\n            {\n              plant.image ? (\n                <img className=\"card-img-top mediumPicSize\" src={ plant.image } alt={ plant.name } />\n              ) : (\n                null\n              )\n            }\n            <div className=\"ml-2 mt-2\"> <span> Name: </span> { plant.name } </div>\n            <div className=\"ml-2 mt-2\"> <span> Description: </span> { plant.description } </div>\n            <div className=\"ml-2 mt-2\"> <span> Size: </span> { plant.size } cm </div>\n            <div className=\"ml-2 mt-2\"> <span> Likes: </span> { plant.location } </div>\n            <div className=\"ml-2 mt-2\"> <span> Price: </span> { plant.price } € </div>\n            <div className=\"ml-2 mt-2 col justify-content-center\">\n              <div className=\"row-2 justify-content-center\">\n                <div className=\"card-body\">\n                  {\n                    (user._id === plant.creator) ? (\n                      <>\n                        <Link to={`/plant/${plant._id}/edit`}> <button className=\"btn btn-sm ml-2\"> Edit </button> </Link>\n                        <button className=\"btn btn-sm ml-2\"\n                          onClick={\n                            () => {\n                              onDelete(plant._id);\n                            }\n                          }\n                        > Delete </button>\n                      </>\n                    ) : (\n                      <>\n                        <Link to={\n                            { \n                              pathname: `/plant/${plant._id}/checkout`, \n                              plant: plant \n                            }\n                        }>\n                          <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Buy </button>\n                        </Link>\n                        <Link to={\n                          {\n                            pathname: \"/request-form\",\n                            plant: plant\n                          }\n                        }>\n                          <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Swap </button>                      \n                        </Link>\n                      </>\n                    )\n                  }\n                  <Link to={\"/\"}>\n                    <button className=\"btn btn-sm ml-2 \"> Go back </button>\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\nexport default PlantDetail;\n","import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport config from \"../config\";\nimport { ScrollTo } from \"react-scroll-to\";\n\nfunction CheckoutForm(props) {\n  const [ succeeded, setSucceeded ] = useState(false);\n  const [ error, setError ] = useState(null);\n  const [ processing, setProcessing ] = useState(\"\");\n  const [ disabled, setDisabled ] = useState(true);\n  const [ clientSecret, setClientSecret ] = useState(\"\");\n  const stripe = useStripe();\n  const elements = useElements();\n  useEffect(\n    () => {\n      // Create PaymentIntent as soon as the page loads\n      window\n        .fetch(\n          `${ config.API_URL }/api/create-payment-intent`, \n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({ items: [{ id: \"xl-tshirt\" }] })\n          }\n        )\n        .then(\n          res => {\n            return res.json();\n          }\n        )\n        .then(\n          data => {\n            setClientSecret(data.clientSecret);\n          }\n        );\n    }, \n    []\n  );\n  const cardStyle = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: \"Arial, sans-serif\",\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#32325d\"\n        }\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\"\n      }\n    }\n  };\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n  const handleSubmit = async ev => {\n    ev.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(\n      clientSecret, \n      {\n        payment_method: {\n          card: elements.getElement(CardElement)\n        }\n      }\n    );\n    if (payload.error) {\n      setError(`Payment failed ${ payload.error.message }`);\n      setProcessing(false);\n    } \n    else {\n      setError(null);\n      setProcessing(false);\n      setSucceeded(true);\n    }\n  }\n  const { plant } = props;\n  return (\n    <div className=\"container col-9\">\n      <form className=\"checkoutForm pt-5 mt-5\" id=\"payment-form\" onSubmit={ handleSubmit }>\n      <h2 className=\"text-center mb-2 p-2\">  {plant.name } </h2>\n      <h3 className=\"text-center mb-4 p-2\"> { plant.price } € </h3>\n        <CardElement className=\"p-2\" id=\"card-element\" options={cardStyle} onChange={ handleChange }/>\n        <div className=\"row justify-content-center\">\n          <button onClick={ props.onCheckout } className=\"btn btn-sm mt-5 mb-4\" disabled={ processing || disabled || succeeded } id=\"submit\">\n            <span id=\"button-text\">\n            {\n              processing ? (\n                <div className=\"spinner\" id=\"spinner\"></div>\n              ) : (\n                \"Pay now\"\n              )\n            }\n            </span>\n          </button>\n        </div>\n        {/* Show any error that happens when processing the payment */}\n        {\n          error && (\n            <div className=\"card-error\" role=\"alert\">\n              { error }\n            </div>\n          )\n        }\n        {/* Show a success message upon completion */}\n        <p className={\n          succeeded ? (\n            \"result-message text-center\"\n          ) : (\n            \"result-message hidden text-center\"\n          )\n        }>\n          Payment succeeded, see the result in your\n          <a href={ `https://dashboard.stripe.com/test/payments` }> { \" \" } Stripe dashboard. </a> \n          Refresh the page to pay again.\n        </p>\n      </form>\n      <div className=\"row justify-content-center mt-4\">\n        <Link to={ `/` }> \n          <button className=\"btn btn-sm\"> Go back </button> \n        </Link>\n      </div>\n    </div>\n  );\n}\n/* `/plants/${plant._id}` */\nexport default CheckoutForm;","import React, { Component } from \"react\";\nimport CheckoutForm from \"./CheckoutForm\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\nclass CheckoutPage extends Component {\n  \n  render() {\n    const promise = loadStripe(\"pk_test_51IQBseEqJqsi8ZD5sJWeLyoMPSxJBKvGcgO3Srmc5UOSqAT6Zp44JmszMSiJGqO9R3eleWrCNyv9TOv9IWmoSLyQ00XHsxNLVR\");\n    const { plant } = this.props.location;\n    return (\n      <div className=\"container row mt-5\">\n        <div className=\"mt-5 col-11 col-md-6 offset-1 offset-md-5\">\n          <Elements stripe={ promise }>\n            <CheckoutForm onCheckout={ this.props.onCheckout } plant={ plant }/>\n          </Elements>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CheckoutPage;","import React from \"react\";\n\nfunction Logout(props) {\n  props.onLogOut();\n  return (\n    <>\n    </>\n  );\n}\n\nexport default Logout;","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nclass RequestForm extends Component {\n  render() {\n    /*const { user } = this.props\n    if (!user) {\n      return <Redirect to={\"/signup\"} />\n    }*/\n    const { plant } = this.props.location;\n    return (\n      <div className=\"container row mt-5\">\n        <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\n          <h4 className=\"mt-5 mb-5\"> Your mesage </h4>\n          <form onSubmit={(event) => this.props.onRequest(event, plant) }>\n            <div>\n              <textarea className=\"mb-4\" name=\"message\" cols=\"35\" rows=\"4\"/>\n            </div>\n            <button className=\"btn btn-sm\" type=\"submit\"> Send </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RequestForm;","import React, { Component } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\n\nclass RequestsPage extends Component {\n  componentDidMount = () => {\n    this.props.onMyRequests();\n  }\n\n  render() {\n    const { user, requests } = this.props\n    if (!user) {\n      return <Redirect to={ \"/signup\" }/>\n    }\n    return (\n      <div className=\"container row mt-5\">\n        <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\n          <h2 className=\"mt-5 mb-5\"> Your messages </h2>\n          {\n            requests.map(\n              (request) => {\n                return (\n                  (request.seller == user._id) ? (\n                    <div className=\"card p-3 mt-4 \" key={ request._id }>\n                      <h4> Request for { request.plant.name } </h4>\n                      <p> { request.message} </p>\n                    </div>\n                  ) : (\n                    null\n                  )\n                );\n              } \n            )\n          }\n          <Link to={ `/` }> \n            <button className=\"btn btn-sm mt-4\"> Go back </button> \n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RequestsPage;","import React, { Component } from \"react\";\nimport SignIn from \"./components/SignIn\";\nimport SignUp from \"./components/SignUp\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\"\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport config from \"./config\";\nimport axios from \"axios\";\nimport Home from \"./components/Home\";\nimport NavBar from \"./components/NavBar\";\nimport Footer from './components/Footer'\nimport AddForm from \"./components/AddForm\";\nimport EditForm from \"./components/EditForm\";\nimport PlantDetail from \"./components/PlantDetail\"\nimport CheckoutPage from \"./components/CheckoutPage\"\nimport LogOut from \"./components/LogOut\";\nimport RequestForm from \"./components/RequestForm\";\nimport RequestsPage from \"./components/RequestsPage\";\n\nclass App extends Component {\n\n  state = {\n    loggedInUser: null,\n    error: null,\n    plants: [],\n    query: \"\",\n    requests: [],\n    fetchingUser: true\n  }\n\n  // ------------Fetch initial data to be displayed---------------\n  componentDidMount() {\n    this.fetchAllPlants()\n    if (!this.state.loggedInUser) {\n      axios.get(`${config.API_URL}/api/user`, { withCredentials: true })\n        .then(\n          (response) => {\n            this.setState(\n              {\n                loggedInUser: response.data,\n                fetchingUser: false\n              }\n            );\n          }\n        )\n        .catch(\n          (err) => {\n\n            this.setState(\n              {\n                fetchingUser: false\n              }\n            );\n\n            console.log(\"Initializing fetching failed\", err);\n          }\n        );\n    }\n  }\n\n  fetchAllPlants = () => {\n    axios.get(`${config.API_URL}/api/plants`)\n      .then(\n        (response) => {\n          this.setState(\n            {\n              plants: response.data \n            }\n          );\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Fetching plants failed\", err);\n        }\n      )\n  }\n\n\n  //--------------- Search form ---------------------------\n  \n  fetchQueryPlants = () => {\n    axios.get(`${config.API_URL}/api/plants/search?q=${this.state.query}`)\n      .then(\n        (response) => {\n          this.setState(\n            {\n              plants: response.data,\n              ready: true\n            }\n          );\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Query fetching failed\", err);\n        }\n      );\n  }\n\n  handleChange = (event) => {\n    const query = event.target.value;\n    this.setState(\n      { query }, \n      () => {\n        query ? ( \n          this.fetchQueryPlants()\n         ) : (\n           this.fetchAllPlants()\n         )\n      }\n    );\n  }\n\n\n  //------------Add Form------------------\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    let name = event.target.name.value;\n    let description = event.target.description.value;\n    let size = event.target.size.value;\n    let price = event.target.price.value;\n    let image = event.target.plantImage.files[0];\n    let location = event.target.location.value;\n    let uploadForm = new FormData();\n    uploadForm.append(\"imageUrl\", image);\n    axios.post(`${config.API_URL}/api/upload`, uploadForm)\n      .then(\n        (response) => {\n          //1. Make an API call to the server side Route to create a new plant\n          const newPlant = {\n            name: name,\n            description: description,\n            size: size,\n            price: price,\n            image: response.data.image,\n            location: location\n          };\n          axios.post(`${config.API_URL}/api/plants/create`, newPlant, { withCredentials: true })\n            .then(\n              (response) => {\n                // 2. Once the server has successfully created a new plant, update your state that is visible to the user\n                this.setState(\n                  {\n                    plants: [response.data, ...this.state.plants]\n                  }, \n                  () => {\n                    // 3. Once the state is update, redirect the user to the home page\n                    this.props.history.push(\"/\");\n                  }\n                );\n              }\n            )\n            .catch(\n              (err) => {\n                console.log(\"Create plant failed\", err);\n              }\n            );\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Image upload failed\", err);\n        }\n      );\n  }\n\n\n  //------------Edit Plant------------------\n\n  handleEditPlant = (plant) => {\n    const editedPlant = {\n      name: plant.name,\n      description: plant.description,\n      size: plant.size,\n      price: plant.price,\n      image: plant.image,\n      location: plant.location\n    };\n    axios.patch(`${config.API_URL}/api/plants/${plant._id}`, editedPlant)\n      .then(\n        () => {\n          let newPlants = this.state.plants.map(\n            (singlePlant) => {\n              if (plant._id === singlePlant._id) {\n                  singlePlant.name = plant.name\n                  singlePlant.description = plant.description\n                  singlePlant.size = plant.size\n                  singlePlant.price = plant.price\n                  singlePlant.image = plant.image\n                  singlePlant.location = plant.location\n              }\n              return singlePlant;\n            }\n          );\n          this.setState(\n            {\n              plants: newPlants\n            }, \n            () => {\n              this.props.history.push(\"/\");\n            }\n          )\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Edit plant failed\", err);\n        }\n      );\n  }\n\n\n  //--------------Delete Plant------------------\n\n  handleDelete = (plantId) => {\n    //1. Make an API call to the server side Route to delete that specific plant\n    axios.delete(`${config.API_URL}/api/plants/${plantId}`)\n      .then(\n        () => {\n          // 2. Once the server has successfully created a new plant, update your state that is visible to the user\n          let filteredPlants = this.state.plants.filter(\n            (plant) => {\n              return plant._id !== plantId;\n            }\n          );\n          this.setState(\n            {\n              plants: filteredPlants\n            }, \n            () => {\n              this.props.history.push(\"/\");\n            }\n          )\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Delete plant failed\", err);\n        }\n      );\n  }\n\n\n  // ---------------- Authentication---------------------\n\n  handleSignUp = (event) => {\n    event.preventDefault();\n    let user = {\n      username: event.target.username.value,\n      email: event.target.email.value,\n      password: event.target.password.value\n    };\n    axios.post(`${config.API_URL}/api/signup`, user)\n      .then(\n        (response) => {\n          this.setState(\n            {\n              loggedInUser: response.data\n            }, \n            () => {\n              this.props.history.push(\"/\");\n            }\n          )\n        }\n      )\n      .catch(\n        (err) => {\n          this.setState(\n            {\n              error: err.data\n            }\n          );\n        }\n      );\n  }\n\n  handleSignIn = (event) => {\n    event.preventDefault();\n    let user = {\n      email: event.target.email.value,\n      password: event.target.password.value\n    };\n    axios.post(`${config.API_URL}/api/signin`, user, { withCredentials: true })\n      .then(\n        (response) => {\n          this.setState(\n            {\n              loggedInUser: response.data\n            }, \n            () => {\n              this.props.history.push(\"/\");\n            }\n          )\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Sihn in failed\", err);\n        }\n      );\n  }\n\n  handleLogOut = () => {\n    axios.post(`${config.API_URL}/api/logout`, {}, { withCredentials: true })\n      .then(\n        () => {\n          this.setState(\n            {\n              loggedInUser: null\n            }, \n            () => {\n              this.props.history.push(\"/\");\n            }\n          );\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Logout failed\", err);\n        }\n      );\n  }\n\n\n  // --------------------Payment-----------------------\n\n  handleCheckout = () => {\n    axios.post(`${config.API_URL}/api/create-payment-intent`, {}, { withCredentials: true })\n      .then(\n        () => {\n          this.setState(\n            () => {\n              this.props.history.push(\"/\");\n            }\n          );\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Checkout failed\", err);\n        }\n      );\n  }\n\n  // ------------------------- Request Form --------------------\n  \n  handleRequestSubmit = (event, plant) => {\n    event.preventDefault();\n    //console.log(\"PLANT:\", plant);\n    let message = event.target.message.value;\n    let user = this.state.loggedInUser;\n    //1. Make an API call to the server side Route to create a new plant\n    const request = {\n      buyer: user._id,\n      seller: plant.creator,\n      plant: plant,    // plant._id,\n      message: message\n    };\n    axios.post(`${config.API_URL}/api/plants/request`, request, { withCredentials: true })\n      .then(\n        (response) => {\n          // 2. Once the server has successfully created a new plant, update your state that is visible to the user\n          this.setState(\n            {\n              requests: [response.data, ...this.state.requests]\n            }, \n            () => {\n              // 3. Once the state is update, redirect the user to the home page\n              this.props.history.push(\"/\");\n            }\n          );\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Create request failed\", err);\n        }\n      );\n  }\n\n // ----------------- My requests ---------------------\n  handleMyRequests = () => {\n    \n    axios.get(`${config.API_URL}/api/myrequests`)\n      .then(\n        (response) => {\n          console.log(\"Response -- handleMyRequests():\", response.data);\n          this.setState(\n            {\n              requests: response.data \n            }\n          );\n        }\n      )\n      .catch(\n        (err) => {\n          console.log(\"Fetching requests failed\", err);\n        }\n      );\n  }\n  \n  // --------------Render------------------\n  render() {\n    const { plants, loggedInUser, error, query, requests } = this.state;\n    if (this.state.fetchingUser) {\n      <div class=\"spinner-grow text-success m-5\" role=\"status\">\n        <span class=\"visually-hidden\">Loading...</span>\n      </div>\n    }\n    return (\n      <div class=\"main\">\n        <NavBar onLogOut={ this.handleLogOut } user={ loggedInUser }/>\n        <Switch>\n          <Route exact path=\"/\" render={\n            () => {\n              return <Home onSearch={ this.handleChange } plants={ plants } query={ query }/>\n            }\n            }/>\n          <Route path=\"/plants/:plantId\" render={\n            (routeProps) => {\n              return <PlantDetail onDelete={ this.handleDelete } user={ loggedInUser } { ...routeProps }/>\n            }\n          }/>\n          <Route path=\"/signin\" render={\n            (routeProps) => {\n              return <SignIn onSignIn={ this.handleSignIn } { ...routeProps }/>\n            }\n          }/>\n          <Route path=\"/signup\" render={\n            (routeProps) => {\n              return <SignUp onSignUp={ this.handleSignUp } error={ error } { ...routeProps }/>\n            }\n          }/>\n          <Route path=\"/logout\" render={\n            (routeProps) => {\n              return <LogOut onLogOut={ this.handleLogOut } { ...routeProps }/>\n            }\n          }/>\n          <Route path=\"/add-form\" render={\n            () => {\n              return <AddForm onAdd={ this.handleSubmit} user={ loggedInUser }/>\n            }\n          }/>\n          <Route path=\"/plant/:plantId/edit\" render={\n              (routeProps) => {\n                return <EditForm onEdit={ this.handleEditPlant } { ...routeProps }/>\n              }\n          }/>\n          <Route path=\"/plant/:plantId/checkout\" render={\n            (routeProps) => {\n              return <CheckoutPage onCheckout={ this.handleCheckout } { ...routeProps }/>\n            }\n          }/> \n          <Route path=\"/request-form\" render={\n            (routeProps) => {\n              return <RequestForm onRequest={ this.handleRequestSubmit } user={ loggedInUser } { ...routeProps }/>\n            }\n          }/> \n          <Route path=\"/myrequests\" render={\n              (routeProps) => {\n                return <RequestsPage onMyRequests={ this.handleMyRequests } user={ loggedInUser } requests={ requests } { ...routeProps }/>\n              }\n          }/>\n        </Switch>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}